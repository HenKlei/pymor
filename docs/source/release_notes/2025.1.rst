pyMOR 2025.1 (August ??, 2025)
--------------------------------

We are proud to announce the release of pyMOR 2025.1!

The main new features are:

*

pyMOR 2025.1 contains contributions by Timo Plath.
See `here <https://github.com/pymor/pymor/blob/main/AUTHORS.md>`__ for more details.


Main new features
^^^^^^^^^^^^^^^^^

Purely data-based neural network reductors
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In `[#2295] <https://github.com/pymor/pymor/pull/2295>`_,
the :class:`~pymor.reductors.neural_network.NeuralNetworkReductor` was adjusted such that
it is now possible to use it also without a full order model at hand. It can be run
completely data-driven only with parameter values and snapshot data. Moreover, a precomputed
reduced basis can be passed as an input to the constructor of the reductor.
The instationary versions of the neural network-based reductors were merged into the
stationary ones, significantly simplifying the application of these reductors to
instationary problems. However, this change will cause backward compatibility issues in
user code that used the removed reductors.



Backward incompatible changes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- `[#2434] Transpose output quantities <https://github.com/pymor/pymor/pull/2434>`_
- `[#2405] The Great Transposition <https://github.com/pymor/pymor/pull/2405>`_

Merged stationary and instationary neural network-based reductors
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In `[#2295] <https://github.com/pymor/pymor/pull/2295>`_, the neural network-based reductors
for instationary problems were removed and their functionality was merged into the respective
reductors for stationary problems. Hence, there is no distinction between stationary and
instationary case anymore and the reductors in :mod:`~pymor.reductors.neural_network` should
be used for both scenarios.

Further notable improvements
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- `[#2426] Change _sv_U_V to _hankel_svd <https://github.com/pymor/pymor/pull/2426>`_
- `[#2425] Switch to NumFOCUS Code of Conduct <https://github.com/pymor/pymor/pull/2425>`_
- `[#2420] created a new hash function to make Mu values hashable. <https://github.com/pymor/pymor/pull/2420>`_
- `[#2417] Allow for VectorArrays as right hand side in time stepping methods <https://github.com/pymor/pymor/pull/2417>`_
- `[#2416] Remove dune-gdt bindings <https://github.com/pymor/pymor/pull/2416>`_
- `[#2408] Add asv-based performance benchmarks <https://github.com/pymor/pymor/pull/2408>`_
- `[#2407] Avoid data corruption in shifted_chol_qr <https://github.com/pymor/pymor/pull/2407>`_
